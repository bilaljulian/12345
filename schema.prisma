// schema.prisma

datasource db {
  provider = "postgresql" // or your preferred database provider
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  phone     String?
  password  String
  zip       String?
  city      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  items     Item[]
  transactions Transaction[]
}

model Item {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  pictureUrl  String
  price       Float
  categoryId  Int
  userId      Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  category    Category @relation(fields: [categoryId], references: [id])
  user        User     @relation(fields: [userId], references: [id])
  transactions Transaction[]
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String
  items Item[]
}

model Transaction {
  id        Int      @id @default(autoincrement())
  userId    Int
  itemId    Int
  amount    Float
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  item      Item     @relation(fields: [itemId], references: [id])
}

model FeaturedListing {
  id        Int      @id @default(autoincrement())
  itemId    Int
  startDate DateTime @default(now())
  endDate   DateTime
  item      Item     @relation(fields: [itemId], references: [id])
}

model Review {
  id        Int      @id @default(autoincrement())
  userId    Int
  itemId    Int
  rating    Int      @default(0)
  comment   String?
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  item      Item     @relation(fields: [itemId], references: [id])
}

model Wishlist {
  id        Int      @id @default(autoincrement())
  userId    Int
  itemId    Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  item      Item     @relation(fields: [itemId], references: [id])
}
